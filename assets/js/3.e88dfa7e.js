(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{123:function(t,e,s){"use strict";s.r(e);var n=s(0),a=Object(n.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._m(1),t._m(2),t._m(3),t._m(4),t._m(5),s("ul",[t._m(6),t._m(7),t._m(8),t._m(9),t._m(10),t._m(11),t._m(12),t._m(13),t._m(14),t._m(15),s("li",[s("code",[t._v("state_id")]),t._v(" and "),s("code",[t._v("country_id")]),t._v(": IDs for the "),s("code",[t._v("Spree::State")]),t._v(" and "),s("code",[t._v("Spree::Country")]),t._v("\nobjects associated with the customer's entered address. These are used to\ndetermine the customer's "),s("router-link",{attrs:{to:"../locations/zones.html"}},[t._v("zone")]),t._v(", which determines applicable taxation\nand shipping methods.")],1)]),s("p",[t._v("For more information about how countries, states, and zones work in Solidus, see\nthe "),s("router-link",{attrs:{to:"../locations/index.html"}},[t._v("Locations")]),t._v(" documentation.")],1),t._m(16),t._m(17),t._m(18),t._m(19),t._m(20),t._m(21),s("p",[t._v("You may want to alter Solidus's address requirements for your store. For\nexample, if you do not require customer phone numbers in order for them to check\nout.")]),t._m(22),t._m(23),s("p",[t._v("Similarly, if you ship to countries that don't require postal codes, like Hong\nKong or Macau, you may want to make postal codes optional instead of required.")]),t._m(24),t._m(25)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"addresses"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#addresses","aria-hidden":"true"}},[this._v("#")]),this._v(" Addresses")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("The "),s("code",[t._v("Spree::Address")]),t._v(" model is used to track address information for customers.\nAddresses are consumed by "),s("code",[t._v("Spree::Order")]),t._v("s, "),s("code",[t._v("Spree::Shipment")]),t._v("s, and\n"),s("code",[t._v("Spree::Carton")]),t._v("s.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("If your store uses the "),e("a",{attrs:{href:"https://github.com/solidusio/solidus_auth_devise",target:"_blank",rel:"noopener noreferrer"}},[e("code",[this._v("solidus_auth_devise")])]),this._v(" gem,\ncustomers belong to the "),e("code",[this._v("Spree::User")]),this._v(" model. A customer may have multiple\naddresses. For example, it is typical for customers to have separate billing and\nshipping addresses.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("You may want to find all of the addresses associated with a "),e("code",[this._v("Spree::User")]),this._v(":")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("pre",{pre:!0,attrs:{class:"language-ruby"}},[s("code",[s("span",{attrs:{class:"token constant"}},[t._v("Spree")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{attrs:{class:"token constant"}},[t._v("User")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("find")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("addresses\n")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("Spree::Address")]),this._v(" objects have the following attributes:")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("code",[this._v("firstname")]),this._v(": The first name for the person at this address.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("code",[this._v("lastname")]),this._v(": The last name for the person at this address.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("code",[this._v("address1")]),this._v(" and "),e("code",[this._v("address2")]),this._v(": The street address (with an optional second line).")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("code",[this._v("city")]),this._v(": The city where the address is.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("code",[this._v("zipcode")]),this._v(": The postal code.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("code",[this._v("phone")]),this._v(" and "),e("code",[this._v("alternative_phone")]),this._v(": The customer's phone number(s).")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("code",[this._v("state_name")]),this._v(": If the customer uses a region name that doesn't correspond with\na country's list of states, the address can store the user-entered")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("code",[this._v("state_name")]),this._v(" as a fallback.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("code",[this._v("alternative_phone")]),this._v(": The alternative phone number.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("code",[this._v("company")]),this._v(": A company name.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"countries-and-states"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#countries-and-states","aria-hidden":"true"}},[this._v("#")]),this._v(" Countries and states")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Countries and states can affect both taxation and shipping on orders. So, an\naddress must always link to a "),e("code",[this._v("Spree::Country")]),this._v(" object. Because some countries do\nnot have associated "),e("code",[this._v("Spree::State")]),this._v("s, a state object is not required.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("If the user-entered state does not correspond with a "),e("code",[this._v("Spree::Country")]),this._v("'s\nassociated states, then the "),e("code",[this._v("state_name")]),this._v(" attribute is used to record the state\nname.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("If you use the "),e("code",[this._v("solidus_frontend")]),this._v(" gem to provide your store's frontend, the\nstate field is hidden if the customer's country does not have "),e("code",[this._v("Spree::State")]),this._v("s\nassociated with it.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"required-address-values"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#required-address-values","aria-hidden":"true"}},[this._v("#")]),this._v(" Required address values")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("By default, "),e("code",[this._v("Spree::Address")]),this._v(" objects require many address values, including a\nphone number and zip code value.")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("Right now, you need to "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Monkey_patch",target:"_blank",rel:"noopener noreferrer"}},[t._v("monkey-patch")]),t._v(" the "),s("code",[t._v("Spree::Address")]),t._v(" model\nin order to change its requirements. For example, you could prepend your custom\nbehavior that redefines "),s("code",[t._v("Spree::Address")]),t._v("'s "),s("code",[t._v("require_phone?")]),t._v(" method:")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("pre",{pre:!0,attrs:{class:"language-ruby"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("module")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("PhoneNotRequired")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" require_phone"),s("span",{attrs:{class:"token operator"}},[t._v("?")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("false")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n"),s("span",{attrs:{class:"token constant"}},[t._v("Spree")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{attrs:{class:"token constant"}},[t._v("Address")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("prepend")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token constant"}},[t._v("PhoneNotRequired")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Right now, you can monkey-patch the "),e("code",[this._v("Spree::Address")]),this._v(" model in order to remove or\nchange the requirements. For example, you could prepend your own custom behavior\nthat redefines "),e("code",[this._v("Spree::Address")]),this._v("'s "),e("code",[this._v("require_zipcode?")]),this._v(" method:")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("pre",{pre:!0,attrs:{class:"language-ruby"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("module")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("ZipCodeValidation")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" require_zipcode"),s("span",{attrs:{class:"token operator"}},[t._v("?")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("# if a country that you ship to does not require postal codes, add its iso")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("# code to the following array so that Spree::Address does not require zip")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("# codes for addresses in those countries.")]),t._v("\n    "),s("span",{attrs:{class:"token operator"}},[t._v("!")]),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token string"}},[t._v("'HK'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token string"}},[t._v("'MO'")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("include"),s("span",{attrs:{class:"token operator"}},[t._v("?")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("country"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("iso"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n"),s("span",{attrs:{class:"token constant"}},[t._v("Spree")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{attrs:{class:"token constant"}},[t._v("Address")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("prepend")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token constant"}},[t._v("ZipCodeValidation")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])}],!1,null,null,null);e.default=a.exports}}]);