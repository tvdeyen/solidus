(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{124:function(e,s,t){"use strict";t.r(s);var a=t(0),r=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"custom-authentication"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#custom-authentication","aria-hidden":"true"}},[e._v("#")]),e._v(" Custom authentication")]),t("p",[t("em",[e._v("You can use the official "),t("a",{attrs:{href:"https://github.com/solidusio/solidus_auth_devise",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("solidus_auth_devise")])]),e._v(" gem\nto provide a "),t("code",[e._v("Spree::User")]),e._v(" model and basic authentication for Solidus. See its\ndocumentation for additional setup instructions.")])]),t("p",[e._v("Stores require a "),t("code",[e._v("User")]),e._v(" model in order to take advantage of all of Solidus's\nfeatures. This model can have any name, and Solidus can integrate with your\nexisting Rails application's existing "),t("code",[e._v("User")]),e._v(" model.")]),t("p",[e._v("By default, Solidus provides a "),t("a",{attrs:{href:"https://github.com/solidusio/solidus/blob/master/core/app/models/spree/legacy_user.rb",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Spree::LegacyUser")]),e._v(" model")]),e._v(" that\noffers the bare minimum functionality of a user. The model is only suitable for\ntesting and should not be used in a production environment.")]),t("p",[e._v("The rest of this article outlines the steps required should you decide to create\na "),t("code",[e._v("User")]),e._v(" model from scratch, use an authentication solution like\n"),t("a",{attrs:{href:"https://github.com/plataformatec/devise",target:"_blank",rel:"noopener noreferrer"}},[e._v("Devise")]),e._v(", or integrate your application's existing "),t("code",[e._v("User")]),e._v(" model.")]),t("p",[e._v("Note that while your user model can have whatever name you like, this article\nuses the model "),t("code",[e._v("MyStore::User")]),e._v(" for its examples.")]),t("h2",{attrs:{id:"set-the-spree-user-class"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#set-the-spree-user-class","aria-hidden":"true"}},[e._v("#")]),e._v(" Set the Spree.user_class")]),t("p",[e._v("No matter what gem or extension you use for your store's "),t("code",[e._v("User")]),e._v(" model, your\napplication's "),t("code",[e._v("Spree.user_class")]),e._v(" value needs to be set. By default, Solidus sets\nthe "),t("code",[e._v("Spree.user_class")]),e._v(" to "),t("code",[e._v("Spree::LegacyUser")]),e._v(".")]),t("p",[e._v("You can configure a custom "),t("code",[e._v("Spree.user_class")]),e._v(" in your application's\n"),t("code",[e._v("/config/initializers/spree.rb")]),e._v(" file:")]),t("pre",{pre:!0,attrs:{class:"language-ruby"}},[t("code",[t("span",{attrs:{class:"token comment"}},[e._v("# /config/initializers/spree.rb")]),e._v("\n"),t("span",{attrs:{class:"token constant"}},[e._v("Spree")]),t("span",{attrs:{class:"token punctuation"}},[e._v(".")]),e._v("user_class "),t("span",{attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{attrs:{class:"token string"}},[e._v('"MyStore::User"')]),e._v("\n")])]),t("p",[e._v("If you use the "),t("code",[e._v("solidus_auth_devise")]),e._v(" gem, your "),t("code",[e._v("Spree.user_class")]),e._v(" is set to\n"),t("code",[e._v("Spree::User")]),e._v(" when you run the gem's "),t("code",[e._v("solidus:auth:install")]),e._v(" generator.")]),t("h2",{attrs:{id:"prepare-your-user-model-for-solidus"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#prepare-your-user-model-for-solidus","aria-hidden":"true"}},[e._v("#")]),e._v(" Prepare your user model for Solidus")]),t("p",[e._v("Once you have set the "),t("code",[e._v("Spree.user_class")]),e._v(", you can start integrating with the\nfeatures that are associated with the "),t("code",[e._v("user_class")]),e._v(".")]),t("h3",{attrs:{id:"custom-user-generator"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#custom-user-generator","aria-hidden":"true"}},[e._v("#")]),e._v(" Custom user generator")]),t("p",[e._v("After you have created your custom "),t("code",[e._v("User")]),e._v(" model and its corresponding database\ntable, you can use the "),t("code",[e._v("spree:custom_user")]),e._v(" generator to generate Solidus's\nrequired "),t("code",[e._v("User")]),e._v(" table columns and some authentication helpers:")]),t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("bundle "),t("span",{attrs:{class:"token function"}},[e._v("exec")]),e._v(" rails generate spree:custom_user MyStore::User\n")])]),t("p",[e._v("Then, you can migrate your database to add the Solidus-specific "),t("code",[e._v("User")]),e._v(" table\ncolumns:")]),t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("bundle "),t("span",{attrs:{class:"token function"}},[e._v("exec")]),e._v(" rails db:migrate\n")])]),t("p",[e._v("If you use the "),t("code",[e._v("spree:custom_user")]),e._v(" generator:")]),t("ul",[t("li",[e._v("The "),t("code",[e._v("Spree.user_class")]),e._v(" is updated to your specified class.")]),t("li",[e._v("Authentication helpers are set up for the "),t("code",[e._v("solidus_frontend")]),e._v(" and\n"),t("code",[e._v("solidus_backend")]),e._v(" views and are sent to the application controller, making it\navailable throughout your application.")]),t("li",[e._v("The "),t("code",[e._v("spree_current_user")]),e._v(" method is defined and is sent to the application\ncontroller and the "),t("code",[e._v("Spree::Api::BaseController")]),e._v(", making it available\nthroughout your application.")])]),t("h3",{attrs:{id:"minimum-requirements"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#minimum-requirements","aria-hidden":"true"}},[e._v("#")]),e._v(" Minimum requirements")]),t("p",[e._v("Solidus requires that your "),t("code",[e._v("User")]),e._v(" model's database table includes at least the\nfollowing columns:")]),t("ul",[t("li",[t("code",[e._v("spree_api_key")]),e._v(": A string with a user's API key. This should be limited to 48\ncharacters.")]),t("li",[t("code",[e._v("bill_address_id")]),e._v(": An integer that provides the ID of the "),t("code",[e._v("Spree::Address")]),e._v("\nthat should be used as the current user's billing address.")]),t("li",[t("code",[e._v("ship_address_id")]),e._v(": An integer that provides the ID of the "),t("code",[e._v("Spree::Address")]),e._v("\nthat should be used as the current user's shipping address.")])]),t("p",[e._v("These three columns are generated for you by the "),t("a",{attrs:{href:"#custom-user-generator"}},[t("code",[e._v("spree:custom_user")]),e._v("\ngenerator")]),e._v(".")]),t("p",[e._v("It also requires that you have a "),t("a",{attrs:{href:"#spree-current-user"}},[t("code",[e._v("spree_current_user")])]),e._v("\nhelper method.")]),t("h4",{attrs:{id:"user-passwords"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#user-passwords","aria-hidden":"true"}},[e._v("#")]),e._v(" User passwords")]),t("p",[e._v("Note that if you use the stock "),t("code",[e._v("solidus_frontend")]),e._v(" or "),t("code",[e._v("solidus_backend")]),e._v(" gems,\nyour user should also have a "),t("code",[e._v("password")]),e._v(" column. You can set up a password column\nhowever you see fit.")]),t("h3",{attrs:{id:"spree-current-user"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spree-current-user","aria-hidden":"true"}},[e._v("#")]),e._v(" spree_current_user")]),t("p",[e._v("If you use the stock "),t("code",[e._v("solidus_frontend")]),e._v(" or "),t("code",[e._v("solidus_backend")]),e._v(" gems, you need to\nprovide a "),t("code",[e._v("spree_current_user")]),e._v(" helper method. Because you likely need to\nreference the current user throughout your application, we recommend adding it\nto your "),t("code",[e._v("application_controller.rb")]),e._v(".")]),t("p",[e._v("If you use an authentication gem that defines a "),t("code",[e._v("current_user")]),e._v(" (like Devise),\nyou may want to just wrap "),t("code",[e._v("current_user")]),e._v(" in a "),t("code",[e._v("spree_current_user")]),e._v(" method:")]),t("pre",{pre:!0,attrs:{class:"language-ruby"}},[t("code",[t("span",{attrs:{class:"token comment"}},[e._v("# /app/controllers/application_controller.rb")]),e._v("\n"),t("span",{attrs:{class:"token keyword"}},[e._v("class")]),e._v(" "),t("span",{attrs:{class:"token class-name"}},[e._v("ApplicationController")]),e._v(" "),t("span",{attrs:{class:"token operator"}},[e._v("<")]),e._v(" "),t("span",{attrs:{class:"token constant"}},[e._v("ActionController")]),t("span",{attrs:{class:"token punctuation"}},[e._v(":")]),t("span",{attrs:{class:"token punctuation"}},[e._v(":")]),t("span",{attrs:{class:"token constant"}},[e._v("Base")]),e._v("\n\n  "),t("span",{attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{attrs:{class:"token punctuation"}},[e._v(".")]),e._v("\n\n  helper_method "),t("span",{attrs:{class:"token symbol"}},[e._v(":spree_current_user")]),e._v("\n\n  "),t("span",{attrs:{class:"token keyword"}},[e._v("def")]),e._v(" spree_current_user\n    current_user\n  "),t("span",{attrs:{class:"token keyword"}},[e._v("end")]),e._v("\n"),t("span",{attrs:{class:"token keyword"}},[e._v("end")]),e._v("\n")])]),t("p",[e._v("This helper can be generated for you by the "),t("a",{attrs:{href:"#custom-user-generator"}},[t("code",[e._v("spree:custom_user")]),e._v("\ngenerator")]),e._v(".")]),t("h3",{attrs:{id:"add-authentication-helpers"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#add-authentication-helpers","aria-hidden":"true"}},[e._v("#")]),e._v(" Add authentication helpers")]),t("p",[e._v("If you use the stock "),t("code",[e._v("solidus_frontend")]),e._v(" or "),t("code",[e._v("solidus_backend")]),e._v(" gems, you need to\nprovide authentication helpers so that users can sign up, log in, and log out.\nBecause you likely need to reference the current user throughout your\napplication, we recommend adding it to you "),t("code",[e._v("application_controller.rb")]),e._v(":")]),t("pre",{pre:!0,attrs:{class:"language-ruby"}},[t("code",[t("span",{attrs:{class:"token comment"}},[e._v("# /app/controllers/application_controller.rb")]),e._v("\n"),t("span",{attrs:{class:"token keyword"}},[e._v("class")]),e._v(" "),t("span",{attrs:{class:"token class-name"}},[e._v("ApplicationController")]),e._v(" "),t("span",{attrs:{class:"token operator"}},[e._v("<")]),e._v(" "),t("span",{attrs:{class:"token constant"}},[e._v("ActionController")]),t("span",{attrs:{class:"token punctuation"}},[e._v(":")]),t("span",{attrs:{class:"token punctuation"}},[e._v(":")]),t("span",{attrs:{class:"token constant"}},[e._v("Base")]),e._v("\n\n  "),t("span",{attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{attrs:{class:"token punctuation"}},[e._v(".")]),e._v("\n\n  helper_method "),t("span",{attrs:{class:"token symbol"}},[e._v(":spree_login_path")]),e._v("\n  helper_method "),t("span",{attrs:{class:"token symbol"}},[e._v(":spree_signup_path")]),e._v("\n  helper_method "),t("span",{attrs:{class:"token symbol"}},[e._v(":spree_logout_path")]),e._v("\n\n  "),t("span",{attrs:{class:"token keyword"}},[e._v("def")]),e._v(" spree_login_path\n    login_path\n  "),t("span",{attrs:{class:"token keyword"}},[e._v("end")]),e._v("\n\n  "),t("span",{attrs:{class:"token keyword"}},[e._v("def")]),e._v(" spree_signup_path\n    signup_path\n  "),t("span",{attrs:{class:"token keyword"}},[e._v("end")]),e._v("\n\n  "),t("span",{attrs:{class:"token keyword"}},[e._v("def")]),e._v(" spree_logout_path\n    logout_path\n  "),t("span",{attrs:{class:"token keyword"}},[e._v("end")]),e._v("\n"),t("span",{attrs:{class:"token keyword"}},[e._v("end")]),e._v("\n")])]),t("p",[e._v("These helpers can be generated for you by the "),t("a",{attrs:{href:"#custom-user-generator"}},[t("code",[e._v("spree:custom_user")]),e._v("\ngenerator")]),e._v(".")]),t("h3",{attrs:{id:"add-solidus-user-methods"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#add-solidus-user-methods","aria-hidden":"true"}},[e._v("#")]),e._v(" Add Solidus user methods")]),t("p",[e._v("The "),t("a",{attrs:{href:"https://github.com/solidusio/solidus/blob/master/core/app/models/concerns/spree/user_methods.rb",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Spree::UserMethods")]),e._v(" module")]),e._v(" provides extensive\nintegration for a "),t("code",[e._v("User")]),e._v(" model. User methods allow a "),t("code",[e._v("User")]),e._v(" object to relate to\nother major models in Solidus like "),t("code",[e._v("Spree::Order")]),e._v("s and "),t("code",[e._v("Spree::StoreCredit")]),e._v("s.")]),t("p",[e._v("To add user methods to your "),t("code",[e._v("User")]),e._v(" model, include "),t("code",[e._v("Spree::UserMethods")]),e._v(" in it:")]),t("pre",{pre:!0,attrs:{class:"language-ruby"}},[t("code",[t("span",{attrs:{class:"token keyword"}},[e._v("module")]),e._v(" "),t("span",{attrs:{class:"token constant"}},[e._v("MyStore")]),e._v("\n  "),t("span",{attrs:{class:"token keyword"}},[e._v("class")]),e._v(" "),t("span",{attrs:{class:"token class-name"}},[e._v("User")]),e._v("\n    include "),t("span",{attrs:{class:"token constant"}},[e._v("Spree")]),t("span",{attrs:{class:"token punctuation"}},[e._v(":")]),t("span",{attrs:{class:"token punctuation"}},[e._v(":")]),t("span",{attrs:{class:"token constant"}},[e._v("UserMethods")]),e._v("\n  "),t("span",{attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{attrs:{class:"token punctuation"}},[e._v(".")]),e._v("\n")])]),t("h3",{attrs:{id:"give-your-store-administrator-the-admin-role"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#give-your-store-administrator-the-admin-role","aria-hidden":"true"}},[e._v("#")]),e._v(" Give your store administrator the admin role")]),t("p",[e._v("In order for store administrators to use the "),t("code",[e._v("solidus_backend")]),e._v(" admin, you need a\nuser with the "),t("code",[e._v("Spree::Role")]),e._v(" of "),t("code",[e._v("admin")]),e._v(". You can give any existing user the\n"),t("code",[e._v("admin")]),e._v(" role like this:")]),t("pre",{pre:!0,attrs:{class:"language-ruby"}},[t("code",[e._v("user "),t("span",{attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{attrs:{class:"token constant"}},[e._v("MyStore")]),t("span",{attrs:{class:"token punctuation"}},[e._v(":")]),t("span",{attrs:{class:"token punctuation"}},[e._v(":")]),t("span",{attrs:{class:"token constant"}},[e._v("User")]),t("span",{attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{attrs:{class:"token function"}},[e._v("find_by")]),t("span",{attrs:{class:"token punctuation"}},[e._v("(")]),e._v("email"),t("span",{attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{attrs:{class:"token string"}},[e._v("'admin@example.com'")]),t("span",{attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\nuser"),t("span",{attrs:{class:"token punctuation"}},[e._v(".")]),e._v("spree_roles "),t("span",{attrs:{class:"token operator"}},[e._v("<")]),t("span",{attrs:{class:"token operator"}},[e._v("<")]),e._v(" "),t("span",{attrs:{class:"token constant"}},[e._v("Spree")]),t("span",{attrs:{class:"token punctuation"}},[e._v(":")]),t("span",{attrs:{class:"token punctuation"}},[e._v(":")]),t("span",{attrs:{class:"token constant"}},[e._v("Role")]),t("span",{attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{attrs:{class:"token function"}},[e._v("find_or_create_by")]),t("span",{attrs:{class:"token punctuation"}},[e._v("(")]),e._v("name"),t("span",{attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{attrs:{class:"token string"}},[e._v("'admin'")]),t("span",{attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),t("p",[e._v("Now, your user with the "),t("code",[e._v("admin@example.com")]),e._v(" email address should be able to\naccess the "),t("code",[e._v("solidus_backend")]),e._v(" interface at "),t("code",[e._v("mystore.com/admin")]),e._v(".")])])}],!1,null,null,null);s.default=r.exports}}]);