(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{82:function(e,t,r){"use strict";r.r(t);var s=r(0),a=Object(s.a)({},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"content"},[e._m(0),e._m(1),e._m(2),e._m(3),e._m(4),e._m(5),e._m(6),e._m(7),e._m(8),e._m(9),r("p",[e._v("All "),r("code",[e._v("Spree::Payment")]),e._v(" objects need to be captured before they are sent to the\npayment service provider for "),r("router-link",{attrs:{to:"payment_processing.html"}},[e._v("processing")]),e._v(". If the\n"),r("code",[e._v("auto_capture")]),e._v(" attribute for a payment method is set to "),r("code",[e._v("false")]),e._v(", the\nadministrator must manually capture payments. However, you can set any payment\nmethod to auto-capture payments.")],1),e._m(10),e._m(11),e._m(12),e._m(13),e._m(14),e._m(15),r("p",[e._v("Solidus does not include working payment methods by default. However, it does\noffer basic payment methods you can use to help you build out your own\nintegration with a payment service provider.")]),r("p",[e._v("These payment methods are provided by Solidus:")]),e._m(16),r("p",[e._v("Solidus also provides bogus credit card payment methods for testing purposes:")]),e._m(17),e._m(18),r("p",[e._v("The simple bogus credit card method does not support payment profiles.[^1]")]),r("p",[e._v("[^1]: A payment profile is a record that pairs a specific customer with a\nspecific credit card. Some payment gateway providers or billing systems use\npayment profiles while others do not.")])])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"payment-methods"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#payment-methods","aria-hidden":"true"}},[this._v("#")]),this._v(" Payment methods")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("In Solidus, each "),t("code",[this._v("Spree::PaymentMethod")]),this._v(" represents one way that your store\nchooses to accept payments. For example, you may want to set up separate payment\nmethods for PayPal payments and credit card payments.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("You can inherit the "),t("a",{attrs:{href:"https://github.com/solidusio/solidus/blob/master/core/app/models/spree/payment_method.rb",target:"_blank",rel:"noopener noreferrer"}},[t("code",[this._v("Spree::PaymentMethod")]),this._v(" base class")]),this._v("\nwhen you build your own integration for a payment service provider. ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("Spree::PaymentMethod")]),this._v(" objects have have the following attributes:")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ul",[r("li",[r("code",[e._v("type")]),e._v(": The subclass of "),r("code",[e._v("Spree::PaymentMethod")]),e._v(" that this payment method\nrepresents.")]),r("li",[r("code",[e._v("name")]),e._v(": The display name for this payment method.")]),r("li",[r("code",[e._v("description")]),e._v(": The description for this payment method.")]),r("li",[r("code",[e._v("auto_capture")]),e._v(": Determines whether a payment should be captured ("),r("code",[e._v("true")]),e._v(") or\nonly authorized ("),r("code",[e._v("false")]),e._v(") during payment processing. For more information, see\n"),r("a",{attrs:{href:"#auto-capture"}},[e._v("Auto-capture")]),e._v(".")]),r("li",[r("code",[e._v("preferences")]),e._v(": A hash of preferences and their current settings for the\ncurrent payment method. The available preferences can be changed by setting a\ndifferent "),r("code",[e._v("preference_source")]),e._v(".")]),r("li",[r("code",[e._v("preference_source")]),e._v(": Sets the source for the "),r("code",[e._v("preferences")]),e._v(" hash content. Your\npayment method may require additional preferences for interfacing with a\npayment service provider. See "),r("a",{attrs:{href:"#preferences"}},[e._v("Preferences")]),e._v(" for more\ninformation.")]),r("li",[r("code",[e._v("active")]),e._v(": Sets whether the payment method is active. Set this to "),r("code",[e._v("false")]),e._v(" to\nhide the payment method from customers.")]),r("li",[r("code",[e._v("available_to_users")]),e._v(": Determines if the payment method is visible to users.")]),r("li",[r("code",[e._v("available_to_admin")]),e._v(": Determines if the payment method is visible to\nadministrators.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"preferences"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#preferences","aria-hidden":"true"}},[this._v("#")]),this._v(" Preferences")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Each payment method has a "),t("code",[this._v("preferences")]),this._v(" attribute that stores settings as a\nhash. The preference values get passed to the payment service provider, so your\npayment method may require additional preferences (like public and private API\nkeys).")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("The base "),t("code",[this._v("Spree::PaymentMethod")]),this._v(" class has just two preferences:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[t("code",[this._v(":server")]),this._v(": The name of your server. This defaults to "),t("code",[this._v('"test"')]),this._v(".")]),t("li",[t("code",[this._v(":test_mode")]),this._v(": Sets whether the payment method can be used for test payments.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"auto-capture"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#auto-capture","aria-hidden":"true"}},[this._v("#")]),this._v(" Auto-capture")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"application-wide-auto-capture-default"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#application-wide-auto-capture-default","aria-hidden":"true"}},[this._v("#")]),this._v(" Application-wide auto-capture default")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("If you have not set the "),t("code",[this._v("auto_capture")]),this._v(" attribute for a payment method, it\ndefaults to the value of your store's "),t("code",[this._v("Spree::Config[:auto_capture]")]),this._v(" preference.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"set-a-payment-source-class"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#set-a-payment-source-class","aria-hidden":"true"}},[this._v("#")]),this._v(" Set a payment source class")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("p",[e._v("The "),r("code",[e._v("Spree::PaymentMethod")]),e._v(" base class has a has a method called\n"),r("code",[e._v("payment_source_class")]),e._v(". It sets the payment source that should be associated\nwith your payment method. When you are creating your own payment method, you\nneed to define a "),r("code",[e._v("payment_source_class")]),e._v(" (even if it is "),r("code",[e._v("nil")]),e._v(").")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("p",[e._v("Solidus provides payment sources such as "),r("code",[e._v("Spree::CreditCard")]),e._v(" and\n"),r("code",[e._v("Spree::StoreCredit")]),e._v(". However, payment methods included in Solidus extensions\n(like "),r("a",{attrs:{href:"https://github.com/solidusio/solidus_paypal_braintree",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("solidus_paypal_braintree")])]),e._v(") could use a\ncompletely custom payment source. (For example, the "),r("code",[e._v("solidus_paypal_braintree")]),e._v("\ngem uses "),r("code",[e._v("SolidusPaypalBraintree::Source")]),e._v(" as the payment source for all\npayments.)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"built-in-payment-methods"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#built-in-payment-methods","aria-hidden":"true"}},[this._v("#")]),this._v(" Built-in payment methods")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ul",[r("li",[r("code",[e._v("Spree::PaymentMethod::Check")]),e._v(": A class for processing payments from checks.")]),r("li",[r("code",[e._v("Spree::PaymentMethod::StoreCredit")]),e._v(": A class for processing payments from\na user's existing "),r("code",[e._v("Spree::StoreCredit")]),e._v(".")]),r("li",[r("code",[e._v("Spree::PaymentMethod::CreditCard")]),e._v(": A base class for other typical credit\ncard-based payment methods. It uses "),r("code",[e._v("Spree::CreditCard")]),e._v(" as a payment source.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[t("code",[this._v("Spree::PaymentMethod::BogusCreditCard")])]),t("li",[t("code",[this._v("Spree::PaymentMethod::SimpleBogusCreditCard")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("You can view the source code for all of Solidus's provided payment methods in\nthe "),t("a",{attrs:{href:"https://github.com/solidusio/solidus/tree/master/core/app/models/spree/payment_method",target:"_blank",rel:"noopener noreferrer"}},[t("code",[this._v("/core/app/models/spree/payment_method/")])]),this._v(".")])}],!1,null,null,null);t.default=a.exports}}]);