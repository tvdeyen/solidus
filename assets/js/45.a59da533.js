(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{83:function(e,t,s){"use strict";s.r(t);var a=s(0),r=Object(a.a)({},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"content"},[e._m(0),s("p",[e._v("Solidus has a flexible payments system that allows multiple payment methods to\nbe used during checkout.")]),s("p",[e._v("The logic for processing payments is decoupled from Solidus's orders system.\nThis allows you to easily define your own payment methods with custom\nprocessing logic.")]),s("p",[e._v("The payments system has many moving parts. The following lists summarizes the\nessential parts of the payments system:")]),e._m(1),s("p",[e._v("The complexity of your store's payments system depends on the payment gateways\nthat you use and the amount of payment methods that you need to support.")]),s("p",[e._v("The rest of this article summarizes these parts of the system.")]),e._m(2),e._m(3),s("p",[e._v("The Solidus community has created a number of Solidus extensions to connect you\npopular PSPs like Braintree, Adyen, Affirm, and Paybright.")]),e._m(4),s("p",[e._v("Solidus is not built to process payments by itself, and it does not include any\nintegrations for popular PSPs. You must install an extension or create your own\nintegration.")]),e._m(5),e._m(6),e._m(7),e._m(8),s("p",[e._v("For more information, see the "),s("router-link",{attrs:{to:"payment-methods.html"}},[e._v("Payment methods")]),e._v(" article.")],1),e._m(9),e._m(10),e._m(11),e._m(12),e._m(13),e._m(14),e._m(15),e._m(16),e._m(17),e._m(18),s("p",[e._v("For more information about processing payments, see the "),s("router-link",{attrs:{to:"payment_processing.html"}},[e._v("Payment\nprocessing")]),e._v(" article.")],1)])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"overview"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#overview","aria-hidden":"true"}},[this._v("#")]),this._v(" Overview")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ol",[s("li",[s("strong",[e._v("Payment service providers")]),e._v(". Before your store can have a functional\npayments system, you need create an account with a payment service provider\nBraintree or Stripe.")]),s("li",[s("strong",[e._v("Payment methods")]),e._v(". A store may have multiple "),s("code",[e._v("Spree::PaymentMethod")]),e._v("s\nconfigured. Payment methods send payment information to a payment service\nprovider.")]),s("li",[s("strong",[e._v("Payments")]),e._v(". After a customer submits their payment details for an order, a\nnew "),s("code",[e._v("Spree::Payment")]),e._v(" object is created.")]),s("li",[s("strong",[e._v("Payment sources")]),e._v(". "),s("code",[e._v("Spree::Payment")]),e._v("s can have a payment source. The source\ndepends on the payment method that is used. For example, the payment source\ncould be a "),s("code",[e._v("Spree::CreditCard")]),e._v(", "),s("code",[e._v("Spree::StoreCredit")]),e._v(", or a non-"),s("code",[e._v("Spree")]),e._v(" model\nprovided by your payment service provider integration.")]),s("li",[s("strong",[e._v("Payment processing")]),e._v(". Once an order is complete, a payment can be\nprocessed. At this point, the "),s("code",[e._v("Spree::Payment::Processing")]),e._v(" class calls on\n"),s("code",[e._v("Spree::PaymentMethod")]),e._v(" and attempts to capture the payment.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"payment-service-providers-psps"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#payment-service-providers-psps","aria-hidden":"true"}},[this._v("#")]),this._v(" Payment service providers (PSPs)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("In order for you to successfully process payments, your  "),t("code",[this._v("Spree::PaymentMethod")]),this._v("s\nneed to send information to a "),t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Payment_service_provider",target:"_blank",rel:"noopener noreferrer"}},[this._v("payment service provider")]),this._v(" (PSP).")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Typically, PSP integrations use the "),t("code",[this._v("Spree::PaymentMethod")]),this._v(" base class to build\nout to the PSP's specifications and API.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"payment-methods"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#payment-methods","aria-hidden":"true"}},[this._v("#")]),this._v(" Payment methods")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("In Solidus, each "),t("code",[this._v("Spree::PaymentMethod")]),this._v(" represents a way that your store chooses\nto accept payments. For example, you may want to set up separate payment methods\nfor PayPal payments and credit card payments.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Solidus does not include working payment methods by default. Typically, you need\nto integrate your payment method with a "),t("a",{attrs:{href:"#payment-service-providers-psps"}},[this._v("payment service\nprovider")]),this._v(".")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Solidus includes bogus credit card methods for testing, a basic\n"),t("code",[this._v("Spree::PaymentMethod::CreditCard")]),this._v(" class that you can use for modeling your own\ncredit card payment methods, and some other basic payment methods.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"payments"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#payments","aria-hidden":"true"}},[this._v("#")]),this._v(" Payments")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("The "),t("code",[this._v("Spree::Payment")]),this._v(" model in Solidus tracks payments. A new payment is created\nonce the customer has submitted their payment details during checkout.")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("p",[e._v("Payments relate to a specific "),s("code",[e._v("Spree::Order")]),e._v(", as well as one of your available\n"),s("code",[e._v("Spree::PaymentMethod")]),e._v("s and a payment source (which could be a\n"),s("code",[e._v("Spree::CreditCard")]),e._v(", a "),s("code",[e._v("Spree::StoreCredit")]),e._v(" or some other non-"),s("code",[e._v("Spree")]),e._v(" model).")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("p",[e._v("Note that a payment being created does not mean that a payment has been made\nsuccessfully. The "),s("code",[e._v("Spree::Payment")]),e._v(" model has a state machine that tracks the\nstatus of a payment. Once the payment is processed by your payment service\nprovider, the state could become "),s("code",[e._v("complete")]),e._v(", "),s("code",[e._v("failed")]),e._v(", "),s("code",[e._v("void")]),e._v(", and so on.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"payment-sources"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#payment-sources","aria-hidden":"true"}},[this._v("#")]),this._v(" Payment sources")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Each "),t("code",[this._v("Spree::Payment")]),this._v(" tracks a payment source. The payment source depends on the\ntypes of payments you accept for each payment method.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("For example, if you use Solidus's built-in "),t("code",[this._v("Spree::PaymentMethod::CreditCart")]),this._v("\npayment method, the payment source class should always be set to\n"),t("code",[this._v("Spree::CreditCard")]),this._v(".")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("p",[e._v("Your payment methods may have more complex payment source classes. For example,\nif you use the "),s("a",{attrs:{href:"https://github.com/solidusio/solidus_paypal_braintree",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("solidus_paypal_braintree")])]),e._v(" gem,\npayments made using your Braintree payment methods have the payment source\n"),s("code",[e._v("SolidusPaypalBraintree::Source")]),e._v(". However, the "),s("code",[e._v("SolidusPaypalBraintree::Source")]),e._v("\nclass has a "),s("code",[e._v("payment_type")]),e._v(" method that could have a value of "),s("code",[e._v("ApplePay")]),e._v(",\n"),s("code",[e._v("CreditCard")]),e._v(" or "),s("code",[e._v("PayPalAccount")]),e._v(".")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"payment-processing"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#payment-processing","aria-hidden":"true"}},[this._v("#")]),this._v(" Payment processing")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("The "),t("code",[this._v("Spree::Payment::Processing")]),this._v(" class's "),t("code",[this._v("process!")]),this._v(" method can can operate on\ncompleted orders. It attempts to capture orders, invoking the customer's\nselected "),t("code",[this._v("Spree::PaymentMethod")]),this._v(" and sending payment details to the payment\nservice provider.")])}],!1,null,null,null);t.default=r.exports}}]);